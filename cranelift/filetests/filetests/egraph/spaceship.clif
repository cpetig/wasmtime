test optimize
set opt_level=speed
target x86_64
target aarch64
target s390x
target riscv64

function %cmp_s1a(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp slt v0, v1
    v3 = icmp eq v0, v1
    v4 = iconst.i8 -1
    v5 = iconst.i8 0
    v6 = iconst.i8 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v11 = icmp sgt v0, v1
    ; check: v12 = icmp slt v0, v1
    ; check: v13 = isub v11, v12
    ; check: return v13
}

function %cmp_s1b(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp slt v0, v1
    v3 = icmp sle v0, v1
    v4 = iconst.i16 -1
    v5 = iconst.i16 0
    v6 = iconst.i16 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v12 = icmp slt v0, v1
    ; check: v13 = isub v9, v12
    ; check: v14 = sextend.i16 v13
    ; check: return v14
}

function %cmp_s2a(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp slt v0, v1
    v3 = icmp ne v0, v1
    v4 = iconst.i8 -1
    v5 = iconst.i8 +1
    v6 = iconst.i8 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v10 = icmp sgt v0, v1
    ; check: v11 = icmp slt v0, v1
    ; check: v12 = isub v10, v11
    ; check: return v12
}

function %cmp_s2b(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp slt v0, v1
    v3 = icmp sgt v0, v1
    v4 = iconst.i16 -1
    v5 = iconst.i16 +1
    v6 = iconst.i16 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v11 = icmp sgt v0, v1
    ; check: v12 = icmp slt v0, v1
    ; check: v13 = isub v11, v12
    ; check: v14 = sextend.i16 v13
    ; check: return v14
}

function %cmp_s3a(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp slt v0, v1
    v4 = iconst.i8 0
    v5 = iconst.i8 -1
    v6 = iconst.i8 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_s3b(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp sle v0, v1
    v4 = iconst.i16 0
    v5 = iconst.i16 -1
    v6 = iconst.i16 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_s4a(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp sgt v0, v1
    v4 = iconst.i8 0
    v5 = iconst.i8 +1
    v6 = iconst.i8 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_s4b(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp sge v0, v1
    v4 = iconst.i16 0
    v5 = iconst.i16 +1
    v6 = iconst.i16 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_s5a(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp sgt v0, v1
    v3 = icmp slt v0, v1
    v4 = iconst.i8 +1
    v5 = iconst.i8 -1
    v6 = iconst.i8 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_s5b(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp sgt v0, v1
    v3 = icmp ne v0, v1
    v4 = iconst.i16 +1
    v5 = iconst.i16 -1
    v6 = iconst.i16 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_s6a(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp sgt v0, v1
    v3 = icmp sge v0, v1
    v4 = iconst.i8 +1
    v5 = iconst.i8 0
    v6 = iconst.i8 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_s6b(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp sgt v0, v1
    v3 = icmp eq v0, v1
    v4 = iconst.i16 +1
    v5 = iconst.i16 0
    v6 = iconst.i16 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp sgt v0, v1
    ; check: v10 = icmp slt v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

;; And again for unsigned...

function %cmp_u1a(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp ult v0, v1
    v3 = icmp eq v0, v1
    v4 = iconst.i16 -1
    v5 = iconst.i16 0
    v6 = iconst.i16 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v12 = icmp ugt v0, v1
    ; check: v13 = icmp ult v0, v1
    ; check: v14 = isub v12, v13
    ; check: v15 = sextend.i16 v14
    ; check: return v15
}

function %cmp_u1b(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp ult v0, v1
    v3 = icmp ule v0, v1
    v4 = iconst.i8 -1
    v5 = iconst.i8 0
    v6 = iconst.i8 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v11 = icmp ult v0, v1
    ; check: v12 = isub v9, v11
    ; check: return v12
}

function %cmp_u2a(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp ult v0, v1
    v3 = icmp ne v0, v1
    v4 = iconst.i16 -1
    v5 = iconst.i16 +1
    v6 = iconst.i16 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v11 = icmp ugt v0, v1
    ; check: v12 = icmp ult v0, v1
    ; check: v13 = isub v11, v12
    ; check: v14 = sextend.i16 v13
    ; check: return v14
}

function %cmp_u2b(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp ult v0, v1
    v3 = icmp ugt v0, v1
    v4 = iconst.i8 -1
    v5 = iconst.i8 +1
    v6 = iconst.i8 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v10 = icmp ugt v0, v1
    ; check: v11 = icmp ult v0, v1
    ; check: v12 = isub v10, v11
    ; check: return v12
}

function %cmp_u3a(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp ult v0, v1
    v4 = iconst.i16 0
    v5 = iconst.i16 -1
    v6 = iconst.i16 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_u3b(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp ule v0, v1
    v4 = iconst.i8 0
    v5 = iconst.i8 -1
    v6 = iconst.i8 +1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_u4a(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp ugt v0, v1
    v4 = iconst.i16 0
    v5 = iconst.i16 +1
    v6 = iconst.i16 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_u4b(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp eq v0, v1
    v3 = icmp uge v0, v1
    v4 = iconst.i8 0
    v5 = iconst.i8 +1
    v6 = iconst.i8 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_u5a(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp ugt v0, v1
    v3 = icmp ult v0, v1
    v4 = iconst.i16 +1
    v5 = iconst.i16 -1
    v6 = iconst.i16 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_u5b(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp ugt v0, v1
    v3 = icmp ne v0, v1
    v4 = iconst.i8 +1
    v5 = iconst.i8 -1
    v6 = iconst.i8 0
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

function %cmp_u6a(i32, i32) -> i16 {
block0(v0: i32, v1: i32):
    v2 = icmp ugt v0, v1
    v3 = icmp uge v0, v1
    v4 = iconst.i16 +1
    v5 = iconst.i16 0
    v6 = iconst.i16 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: v12 = sextend.i16 v11
    ; check: return v12
}

function %cmp_u6b(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp ugt v0, v1
    v3 = icmp eq v0, v1
    v4 = iconst.i8 +1
    v5 = iconst.i8 0
    v6 = iconst.i8 -1
    v7 = select v3, v5, v6
    v8 = select v2, v4, v7
    return v8
    ; check: v9 = icmp ugt v0, v1
    ; check: v10 = icmp ult v0, v1
    ; check: v11 = isub v9, v10
    ; check: return v11
}

;; Then a few of the simplifications

function %ult_via_cmp(i8, i8) -> i8 {
block0(v0: i8, v1: i8):
    v2 = icmp ugt v0, v1
    v3 = icmp ult v0, v1
    v4 = isub v2, v3
    v5 = iconst.i8 0
    v6 = icmp slt v4, v5
    return v6
    ; check: v3 = icmp ult v0, v1
    ; check: return v3
}

function %sle_via_cmp(i16, i16) -> i8 {
block0(v0: i16, v1: i16):
    v2 = icmp sgt v0, v1
    v3 = icmp slt v0, v1
    v4 = isub v2, v3
    v5 = iconst.i8 0
    v6 = icmp sle v4, v5
    return v6
    ; check: v7 = icmp sle v0, v1
    ; check: return v7
}

function %sgt_via_cmp(i32, i32) -> i8 {
block0(v0: i32, v1: i32):
    v2 = icmp sgt v0, v1
    v3 = icmp slt v0, v1
    v4 = isub v2, v3
    v5 = iconst.i8 0
    v6 = icmp sgt v4, v5
    return v6
    ; check: v7 = icmp sgt v0, v1
    ; check: return v7
}

function %uge_via_cmp(i64, i64) -> i8 {
block0(v0: i64, v1: i64):
    v2 = icmp ugt v0, v1
    v3 = icmp ult v0, v1
    v4 = isub v2, v3
    v5 = iconst.i8 0
    v6 = icmp sge v4, v5
    return v6
    ; check: v7 = icmp uge v0, v1
    ; check: return v7
}

function %eq_via_cmp(i16, i16) -> i8 {
block0(v0: i16, v1: i16):
    v2 = icmp ugt v0, v1
    v3 = icmp ult v0, v1
    v4 = isub v2, v3
    v5 = sextend.i32 v4
    v6 = iconst.i32 0
    v7 = icmp eq v5, v6
    return v7
    ; check: v10 = icmp eq v0, v1
    ; check: return v10
}

function %ne_via_cmp(i16, i16) -> i8 {
block0(v0: i16, v1: i16):
    v2 = icmp ugt v0, v1
    v3 = icmp ult v0, v1
    v4 = isub v2, v3
    v5 = sextend.i32 v4
    v6 = iconst.i32 0
    v7 = icmp ne v5, v6
    return v7
    ; check: v10 = icmp ne v0, v1
    ; check: return v10
}
